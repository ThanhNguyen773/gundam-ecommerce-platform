import { create } from "zustand";
import toast from "react-hot-toast";
import axios from "../lib/axios";

export const useCouponStore = create((set) => ({
  coupons: [],
  loading: false,

  fetchCoupons: async () => {
  set({ loading: true });
  try {
    const res = await axios.get("/coupons");
    const data = Array.isArray(res.data) ? res.data : res.data.coupons || [];
    set({ coupons: data, loading: false });
  } catch (err) {
    set({ loading: false });
    toast.error("L·ªói khi t·∫£i danh s√°ch m√£ gi·∫£m gi√°");
  }
},


  createCoupon: async (data) => {
  set({ loading: true });
  try {
    const res = await axios.post("/coupons", data);
    set((state) => ({
      coupons: [...state.coupons, res.data],
      loading: false,
    }));
    toast.success("T·∫°o m√£ gi·∫£m gi√° th√†nh c√¥ng!");
    return true; // üëà TH√äM D√íNG N√ÄY
  } catch (err) {
    set({ loading: false });
    toast.error(err.response?.data?.message || "L·ªói khi t·∫°o m√£ gi·∫£m gi√°");
    return false; // üëà TH√äM D√íNG N√ÄY
  }
},


  deleteCoupon: async (id) => {
    set({ loading: true });
    try {
      const confirm = window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën xo√° m√£ gi·∫£m gi√°?");
      if (!confirm) return;
      await axios.delete(`/coupons/${id}`);
      set((state) => ({
        coupons: state.coupons.filter((c) => c._id !== id),
        loading: false,
      }));
      toast.success("Xo√° m√£ gi·∫£m gi√° th√†nh c√¥ng!");
    } catch (err) {
      set({ loading: false });
      toast.error("L·ªói khi xo√° m√£ gi·∫£m gi√°");
    }
  },

  deleteAllCoupons: async () => {
    try {
      const confirm = window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën xo√° t·∫•t c·∫£ m√£ gi·∫£m gi√°?");
      if (!confirm) return;

      await axios.delete("/coupons/all");
      set({ coupons: [] });
      toast.success("ƒê√£ xo√° t·∫•t c·∫£ m√£ gi·∫£m gi√°!");
    } catch (error) {
      toast.error("L·ªói khi xo√° t·∫•t c·∫£ m√£ gi·∫£m gi√°");
    }
  },

  fetchActiveCoupons: async () => {
  set({ loading: true });
  try {
    const res = await axios.get("/coupons/user/active");
    const data = Array.isArray(res.data) ? res.data : res.data.coupons || [];
    set({ coupons: data, loading: false });
  } catch (err) {
    set({ loading: false });
    toast.error("L·ªói khi t·∫£i m√£ gi·∫£m gi√° ƒëang ho·∫°t ƒë·ªông");
  }
},


updateCoupon: async (id, data) => {
  set({ loading: true });
  try {
    const res = await axios.put(`/coupons/${id}`, data);
    set((state) => ({
      coupons: state.coupons.map((c) =>
        c._id === id ? res.data.coupon : c
      ),
      loading: false,
    }));
    toast.success("C·∫≠p nh·∫≠t m√£ gi·∫£m gi√° th√†nh c√¥ng!");
    return true;
  } catch (err) {
    set({ loading: false });
    toast.error("L·ªói khi c·∫≠p nh·∫≠t m√£");
    return false;
  }
}




}));
